version: '3.8'

services:
  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: ml-face-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Main ML Face Service
  ml-face-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: ml-face-service:latest
    container_name: ml-face-service
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      - SERVER_PORT=8080
      - MODEL_PATH=/app/models
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      # Mount models directory for persistence
      - ./models:/app/models:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

# Persistent volumes
volumes:
  redis_data:
    driver: local

# ================================
# Usage:
# ================================
#
# Build and run:
#   docker-compose up --build
#
# Run in background:
#   docker-compose up -d
#
# View logs:
#   docker-compose logs -f ml-face-service
#   docker-compose logs -f redis
#
# Stop services:
#   docker-compose down
#
# Stop and remove volumes (Redis data):
#   docker-compose down -v
#
# Environment variables:
#   Create .env file from env.example for custom configuration
#   cp env.example .env
#
# Redis access:
#   docker-compose exec redis redis-cli
#
# ================================
